plugins {
  id("org.jetbrains.kotlin.jvm") version "1.9.21"
  id("org.jetbrains.kotlin.plugin.allopen") version "1.9.21"
  id("org.jetbrains.kotlin.plugin.jpa") version "1.9.21"
  id("com.google.devtools.ksp") version "1.9.21-1.0.16"
  id("com.github.johnrengelman.shadow") version "8.1.1"
  id("io.micronaut.application") version "4.2.1"
  id("io.micronaut.test-resources") version "4.2.1"
  id("io.micronaut.aot") version "4.2.1"
}

version = "0.1"
group = "dev.da0hn.course.micronaut"

repositories {
  mavenCentral()
}

dependencies {
  ksp("io.micronaut.data:micronaut-data-processor:4.0.2")
  ksp("io.micronaut:micronaut-http-validation:4.0.1")
  ksp("io.micronaut.serde:micronaut-serde-processor:2.1.0")
  implementation("org.yaml:snakeyaml:2.2") // To read *.yml files https://blog.bhanunadar.com/solving-unable-to-read-properties-from-application-yml-in-micronaut/
  implementation("io.micronaut.beanvalidation:micronaut-hibernate-validator:4.0.2")
  implementation("io.micronaut.data:micronaut-data-hibernate-jpa:4.0.2")
  implementation("io.micronaut.kotlin:micronaut-kotlin-runtime:4.0.1")
  implementation("io.micronaut.serde:micronaut-serde-jackson:2.1.0")
  implementation("io.micronaut.sql:micronaut-jdbc-hikari:5.0.1")
  implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
  implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
  compileOnly("io.micronaut:micronaut-http-client:4.0.1")
  runtimeOnly("ch.qos.logback:logback-classic:1.4.14")
  runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin:2.15.3")
  runtimeOnly("org.postgresql:postgresql:42.5.4")
  implementation("io.micronaut.discovery:micronaut-discovery-client:4.0.1")
  testImplementation("io.micronaut:micronaut-http-client:4.0.1")
  annotationProcessor("io.micronaut.serde:micronaut-serde-processor:2.1.0")
}


application {
  mainClass.set("dev.da0hn.course.micronaut.ApplicationKt")
}
java {
  sourceCompatibility = JavaVersion.toVersion("17")
}


graalvmNative.toolchainDetection = false
micronaut {
  runtime("netty")
  testRuntime("junit5")
  processing {
    incremental(true)
    annotations("dev.da0hn.course.micronaut.*")
  }
  aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
    optimizeServiceLoading = false
    convertYamlToJava = false
    precomputeOperations = true
    cacheEnvironment = true
    optimizeClassLoading = true
    deduceEnvironment = true
    optimizeNetty = true
  }
}



